package FullCode;

import java.util.ArrayList;
import java.util.List;

abstract class NumberGenerator{
	public abstract int generateNumber();
}

class RandomNumberGenerator extends NumberGenerator{
	public int generateNumber(){
		return (int)(Math.random() * 100);
	}
}

interface NumberListener{
	void onNumberGenerated(int number);
}

class NumberPrinter implements NumberListener{
	public void onNumberGenerated(int number){
		System.out.println("Generated Number: " + number);
	}
}

public class NumberGeneratorApp{
	public static final int NUM_THREADS = 5;

	public static void main(String[] args){
		List<Thread> threads = new ArrayList<>();
		NumberGenerator generator = new RandomNumberGenerator();
		NumberListener listener = new NumberPrinter();

		for (int i = 0; i < NUM_THREADS; i++){
			Thread thread = new Thread(() -> {
				try{
					int number = generator.generateNumber();
					listener.onNumberGenerated(number);
				} catch (Exception e) {
					System.out.println("An error occurred: " + e.getMessage());
				}
			});
			threads.add(thread);
			thread.start();
		}

		for (Thread thread : threads){
			try{
				thread.join();
			} catch (InterruptedException e) {
				System.out.println("Thread interrupted: " + e.getMessage());
			}
		}
	}
}